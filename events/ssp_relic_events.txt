namespace = ssp_relic



ship_event = {
    id = ssp_relic.100
    hide_window = yes
    is_triggered_only = yes
    

    immediate = {

        add_modifier = { 
            modifier = "ssp_r_drive_core_active_effect_a"
            days = 10
        }

        if = {
            limit = {
                controller = {
                    has_country_flag = allowed_jump_once
                }   
            }
            controller = {
                remove_country_flag = jump_drive_allowed
                remove_country_flag = allowed_jump_once
            }
        }
        
        controller = {
            every_controlled_ship = {
                if = {
                    limit = {
                        has_ship_flag = jump_drive_enabled_effect
                    }
                        remove_modifier = "ssp_r_drive_core_active_effect_b"
                        remove_modifier = "ssp_r_drive_core_active_effect_c"
                        remove_modifier = "ssp_r_drive_core_active_effect_d"
                        remove_ship_flag = jump_drive_enabled_effect
                }
            }
        }
    }
}


ship_event = {
    id = ssp_relic.101
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        fleet.owner = {
            has_country_flag = drive_core_active_flag
        }
    }

    immediate = { #changed this to owner, so incase any issue arise, remove owner
        owner = {
            every_controlled_ship = {
                if = {
                    limit = {
                        has_ship_flag = jump_drive_enabled_effect
                    }
                    remove_modifier = "ssp_r_drive_core_active_effect_b"
                    remove_modifier = "ssp_r_drive_core_active_effect_c"
                    remove_modifier = "ssp_r_drive_core_active_effect_d"
                    remove_ship_flag = jump_drive_enabled_effect
                }
            }
        }
        owner = {
            remove_country_flag = drive_core_active_flag
        }
    }
}




ship_event = {
	id = ssp_relic.200
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		exists = owner
		owner = {
			has_relic = ssp_r_drive_core
		}
			is_ship_class = shipclass_science_ship
	}

	immediate = {		
        add_modifier = {
			modifier = ssp_r_drive_core_passive
			days = -1
		}
	}
}

# trigger when you obtain the relic! (Rodathnov)
# .300 = Warpdrive
country_event = {
    id = ssp_relic.300
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_relic = ssp_r_drive_core
        NOR = {
            has_country_flag = drive_core_passive_activated
        }
    }

    immediate = {
        owner = {
             set_country_flag = drive_core_passive_activated
        }

        every_controlled_ship = {
            limit = {
                is_ship_class = shipclass_science_ship
            }
            add_modifier = {
                modifier = ssp_r_drive_core_passive
            }
        }
    }
}


country_event = {
    id = ssp_relic.301
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_country_flag = drive_core_passive_activated
        NOT = {
            has_relic = ssp_r_drive_core
        }
    }

    immediate = {
        every_controlled_ship = {
            limit = {
                is_ship_class = shipclass_science_ship
                has_modifier = ssp_r_drive_core_passive
            }
            remove_modifier = ssp_r_drive_core_passive
        }
    }
}

# on_monthly_pulse_country: give favours for envoys (Stellaris)
# .400 = Bacterium
country_event = {
	id = ssp_relic.400
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_relic = ssp_r_khyran_bacterium
	}

	immediate = {
		every_envoy = {
			limit = {
				has_envoy_task = { task = improve_relations }
				root = {
					num_favors = {
						target = prev.envoy_location_country
						value < 10
					}
				}
			}
			random_list = {
				5 = {
					root = {
						add_favors = {
							target = prev.envoy_location_country
							value = 1
						}
						create_message = {
							type = MESSAGE_FAVOR_GAINED_TRADITION
							localization = MESSAGE_FAVOR_GAINED_BY_MIND_CONTROL
							days = 30
							target = prev.envoy_location_country.capital_scope
							variable = {
								type = name
								localization = WHO
								scope = prev.envoy_location_country
							}
						}
					}
				}
				95 = {}
			}
		}
	}
}

country_event = {
	id = ssp_relic.401
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_envoy = {
			limit = {
				has_envoy_task = { task = improve_relations }
                root = {
                    num_favors = {
					target = prev.envoy_location_country
					value < 10
                    }
			    }
            }
            root = {
				add_favors = {
				target = prev.envoy_location_country
				value = 10
				}
            }
        }
    }
}
#grand renanimator
country_event = {
    id = ssp_relic.500
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                NOT = { has_global_flag = grand_reanimator_spawned }
            }
            owner = {
                random_system_within_border = {
                    weights = {
                        base = 1
                        modifier = {
                            factor = 10
                            is_capital_system = no
                        }
                        modifier = {
                            factor = 10
                            OR = {
                                NOT = { exists = sector }
                                sector = {
                                    NOT = { has_sector_type = core_sector }
                                }
                            }
                        }
                    }
                    save_event_target_as = spawning_system
                    spawn_system = {
                        initializer = grand_reanimator_finish
                        effect = {
                            root = { set_visited = prev }
                            save_event_target_as = ssp_reanimator_system
                        }
                    }
                    if = {
                        limit = { last_created_system = { NOT = { has_hyperlane_to = prev } } }
                        add_hyperlane = {
                            from = this
                            to = last_created_system
                        }
                    }
                    else = {
                        add_extra_hyperlane_to_spawned_system_effect = yes
                    }
                }
            }
        }
    }
}

fleet_event = { #Enter the toxic system, meet the entity
    id = ssp_relic.501
    title = ssp_relic.501.name
    desc = ssp_relic.501.desc # Just open hyperlane
    picture = GFX_evt_toxic_god #TODO: change
    show_sound = evn_tox_knights_of_the_toxic_god
    location = from

    is_triggered_only = yes

    trigger = {
        from = {
            has_star_flag = guardian_reanimator_system
        }
        controller = {
            has_origin = origin_follower_cult
            NOR = {
                has_country_flag = visited_reanimator_system
                has_global_flag = reanimator_captured
            }
        }
        from = {
            any_fleet_in_system = { has_fleet_flag = grand_reanimator_original_fleet }
        }
    }

    immediate = {
        controller = {
            set_country_flag = visited_reanimator_system
        }
    }

    option = { # This monstruosity is no god of mine! Smite it!
        name = ssp_relic.501.a
    }

    option = { # The God wishes to test our mettle! Bring our armies!
        name = ssp_relic.501.b
    }
}

country_event = { # Upon defeating the Entity
    id = ssp_relic.502
    title = ssp_relic.502.name
    desc = ssp_relic.502.desc
    picture = GFX_evt_toxic_god
    show_sound = evn_tox_knights_of_the_toxic_god

    is_triggered_only = yes

    trigger = {
        this = {
            from = { is_country_type = guardian_dragon_reanimator }
        }
        has_origin = origin_follower_cult
    }

    option = { # recruit him
        name = ssp_relic.502.a
        custom_tooltip = ssp_relic.502.a.tt
        hidden_effect = {
            owner = {
                country_event = { id = ssp_relic.598 }
                #      create_fleet = {
                #         name = "NAME_Toxic_God"
                #       settings = {
                #            spawn_debris = no
                #           is_boss = yes
                #      }
                #    effect = {
                #         set_owner = root.owner
                #       create_ship = {
                #          name = "NAME_Toxic_God"
                #         design = "NAME_Venomous_Deity" #call galparagon here
                #    }
                #   set_location = {
                #      target = fromfrom
                #     distance = 5
                #    angle = random
                # }
                # }
            }
        }
    }


    option = { # Kill him, kill him now. DEW IT
        name = ssp_relic.502.b
        custom_tooltip = ssp_relic.502.b.tt
        hidden_effect = {
            owner = {
                country_event = { id = ssp_relic.511 scopes = { fromfrom = fromfrom.solar_system } }
            }
        }
    }
}

country_event = {
    id = ssp_relic.511
    title = ssp_relic.511.name
    desc = ssp_relic.511.desc
    picture = GFX_evt_toxic_god
    location = fromfrom
    show_sound = event_mystic_reveal

    is_triggered_only = yes

    option = {
        name = ssp_relic.511.A
        add_relic = ssp_r_animarum
    }
}

country_event = { # Create Semichki && maybe spawn him on some reanimated armies: See animarum active effect
    id = ssp_relic.598
    title = ssp_relic.598.name
    desc = ssp_relic.598.desc
    picture = GFX_evt_board_meeting
    show_sound = par_event_keides
    fire_only_once = yes
    is_triggered_only = yes
    event_window_type = leader_story
    event_picture_background = "GFX_leader_recruitment_bg_legendary_keides"

    immediate = {

        create_country = {
            name = "NAME_Unknown"
            type = global_event
            auto_delete = yes
            flag = {
                icon = {
                    category = "special"
                    file = "unknown.dds"
                }
                background = {
                    category = "backgrounds"
                    file = "00_solid.dds"
                }
                colors = {
                    "red"
                    "red"
                    "null"
                    "null"
                }
            }
            effect = {
                save_event_target_as = semichki_country
            }
        }
        event_target:semichki_country = {
            create_species = {
                name = "NAME_Semichki"
                class = NECROID
                portrait = nec6 #Exakeides portrait
                namelist = "PRT1"
                traits = {
                 #   trait = "trait_"
                    trait = "trait_quick_learners"
                   # trait = "trait_erudite"
                }
                effect = {
                    save_event_target_as = semichki_species
                }
            }
            create_leader = {
                class = general
                species = event_target:semichki_species
                name = "NAME_Semichki_leader"
                skill = 8
                gender = male
                event_leader = yes
                skip_background_generation = yes
                background_ethic = ethic_xenophobe
                custom_catch_phrase = keides_catch_phrase
                custom_description = desc_semichki
                set_age = 1999
                effect = {
                    set_leader_flag = legendary_leader
                    #set_leader_flag = "TBD"
                    set_leader_flag = immune_to_negative_traits
                    set_immortal = yes
                    save_global_event_target_as = semichki_leader
                    #add_trait_no_notify = leader_trait_legendary_far_from_home
                    set_owner = root
                    exile_leader_as = semichki_leader
                }
            }
        }
    }

    picture_event_data = {
        portrait = event_target:semichki_leader
        room = galactic_custodian_room
    }

    option = {
        name = paragon.3115.a
        hidden_effect = { country_event = { id = ssp_relic.599 } }
    }
}

country_event = { # HIRE/DISMISS Semichki... Why would you want to sack this guy anyways?
    id = ssp_relic.599
    title = ssp_relic.599.name
    desc = ssp_relic.599.desc
    diplomatic = yes
    fire_only_once = yes
    is_triggered_only = yes
    show_sound = par_event_keides

    picture = GFX_leader_recruitment_bg_legendary_keides
    event_window_type = leader_recruit

    picture_event_data = {
        portrait = event_target:semichki_leader
        room = galactic_custodian_room
    }

    trigger = {
        exists = event_target:semichki_country
    }

    option = {
        # Special tag to make mark this is the hire option
        name = HIRE
        tag = hire_leader
        sound = "par_keides_hire"

        hidden_effect = {
            clone_leader = {
                target = event_target:semichki_leader
            }
            last_created_leader = {
                set_leader_flag = "TBD"
                set_leader_flag = legendary_leader
                save_global_event_target_as = semichki_leader
                set_leader_flag = immune_to_negative_traits
                #add_trait_no_notify = leader_trait_legendary_far_from_home
                set_owner = root
            }
            switch = {
                trigger = has_global_flag #I'm going to force it to be either militarist or xenophobe
                leader_raised_xenophile = {
                    event_target:semichki_leader = { change_background_ethic = ethic_xenophile }
                }
                leader_raised_xenophobe = {
                    event_target:semichki_leader = { change_background_ethic = ethic_xenophobe }
                }
                leader_raised_militarist = {
                    event_target:semichki_leader = { change_background_ethic = ethic_militarist }
                }
                leader_raised_pacifist = {
                    event_target:semichki_leader = { change_background_ethic = ethic_pacifist }
                }
                leader_raised_egalitarian = {
                    event_target:semichki_leader = { change_background_ethic = ethic_egalitarian }
                }
                leader_raised_authoritarian = {
                    event_target:semichki_leader = { change_background_ethic = ethic_authoritarian }
                }
                leader_raised_spiritualist = {
                    event_target:semichki_leader = { change_background_ethic = ethic_spiritualist }
                }
                leader_raised_materialist = {
                    event_target:semichki_leader = { change_background_ethic = ethic_materialist }
                }
            }
        }

        create_message = {
            type = MESSAGE_RECRUITED_LEADER
            localization =  MESSAGE_RECRUITED_LEADER_DESC
            days = @toast_message_days
            target = event_target:semichki_country
            variable = {
                type = name
                localization = LEADER
                scope = event_target:semichki_leader
            }
            variable = {
                key = "border"
                value = "GFX_border_legendary"
            }
        }
    }

    option = {
        name = DISMISS
        # Special tag to mark this as the dismiss option
        tag = dismiss_leader
        sound = "par_keides_dismiss"

        hidden_effect = {
            event_target:semichki_leader = {
                kill_leader = { show_notification = no }
            }
        }
    }

    option = {
        name = "TBD".a
        response_text = "TBD".response
        is_dialog_only = yes
    }
    option = {
        name = "TBD".b
        response_text = "TBD".response
        is_dialog_only = yes
    }
    option = {
        name = "TBD"
        response_text = "TBD".response
        is_dialog_only = yes
    }
}