namespace = ssp_ritual

country_event = {  #make sure that this only triggers when you have origin dictionnaire infernal
    id = ssp_ritual.100
    title = ssp_ritual.100.name
	desc = ssp_ritual.100.desc
	picture = GFX_evt_alien_propaganda
	show_sound = event_death_cult
	location = capital_scope
    is_triggered_only = yes

    trigger = {
		is_spiritualist = yes
		OR = {
			has_valid_civic = civic_death_cult
            has_valid_civic = civic_death_cult_corporate
        }
    }

    option = {
        name = sspresurrection.100a

        switch = {
            trigger = has_country_flag
       
            grimoire_quantityI = { custom_tooltip =  "Only few of the initiates have risen from the dead, estimates indicate a ~25% rate of success, we must decipher more of the book" }
            grimoire_quantityII = { custom_tooltip =  "Only half of the initiates have risen from the dead, we must decipher more of the book"}
            grimoire_quantityIII = { custom_tooltip =  "Only cmst of the initiates have risen from the dead, estimates indicate a ~75% rate of success, but the book has already been completely deciphe"}
            grimoire_maxima = { custom_tooltip =  "True Immortality at last" }
        }
    }

    immediate = {
        hidden_effect = {
            switch = {
                trigger = has_country_flag
           
                grimoire_quantityI = {
                    multiply_variable = {
                        which = sacrifice_result_current_count
                        value = 0.25
                    }
                    ceiling_variable = sacrifice_result_current_count 
                }
                grimoire_quantityII = {
                    multiply_variable = {
                        which = sacrifice_result_current_count
                        value = 0.5
                    }
                    ceiling_variable = sacrifice_result_current_count 
                }
                grimoire_quantityIII = {
                    multiply_variable = {
                        which = sacrifice_result_current_count
                        value = 0.75
                    }
                    ceiling_variable = sacrifice_result_current_count 
                }
                grimoire_maxima = {
                    multiply_variable = {
                        which = sacrifice_result_current_count
                        value = 1
                    }
                    ceiling_variable = sacrifice_result_current_count 
                }
            }
        }
    

        while = {
		    count = sacrifice_result_current_count
            switch = {
                trigger = has_country_flag

                default = {
                    capital_scope = {
		                create_pop = {
		    	            species = owner_species
                        }
                        last_created_pop = {
                            set_pop_flag = ssp_reinc_zombie
                            modify_species = {
                                species = this
                                add_trait = trait_zombie
                                add_traits_at_start_of_list = yes
                            }
                        }
                    }
                }
                grimoire_qualityI = {
                    capital_scope = {
		                create_pop = {
		    	            species = owner_species
                        }
                        last_created_pop = {
                            set_pop_flag = ssp_reinc_zombie
                            modify_species = {
                                species = this
                                add_trait = trait_grimoire_qualityI
                                add_traits_at_start_of_list = yes
                            }
                        }
                    }
                }
                grimoire_qualityII = {
                    capital_scope = {
		                create_pop = {
			                species = owner_species
                        }
                        last_created_pop = {
                            set_pop_flag = ssp_reinc_zombie
                            modify_species = {
                                species = this
                                add_trait = trait_grimoire_qualityII
                                add_traits_at_start_of_list = yes
                            }
                        }
                    }
                }
                grimoire_qualityIII = {
                    capital_scope = {
		                create_pop = {
			                species = owner_species
                        }
                        last_created_pop = {
                            set_pop_flag = ssp_reinc_zombie
                            modify_species = {
                                species = this
                                add_trait = trait_grimoire_qualityIII
                                add_traits_at_start_of_list = yes
                            }
                        }
                    }
                }
                grimoire_maxima = {
                    capital_scope = {
		                create_pop = {
			                species = owner_species
                        }
                        last_created_pop = {
                            if = {
                                limit = {
                                    NOT = { has_trait = trait_grimoire_maxima }
                                }
                                set_pop_flag = ssp_reinc_zombie
                                modify_species = {
                                    species = this
                                    add_trait = trait_grimoire_maxima
                                    add_traits_at_start_of_list = yes
                                }
                            }
                        }
                    }
                }
            }
        }
        clear_variable = sacrifice_result_current_count
    }
}


